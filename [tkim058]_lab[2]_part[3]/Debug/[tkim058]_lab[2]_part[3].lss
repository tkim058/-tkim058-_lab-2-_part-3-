
[tkim058]_lab[2]_part[3].elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000093b  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f4  00000000  00000000  00000b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ec  00000000  00000000  00001343  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001630  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000411  00000000  00000000  00001674  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000184  00000000  00000000  00001a85  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001c09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	40 c0       	rjmp	.+128    	; 0x11c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
	return ((x & (0x01 << k)) != 0);
}

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
  a4:	87 b9       	out	0x07, r24	; 7
  a6:	18 b8       	out	0x08, r1	; 8
	
	unsigned char tmpC = 0x00;
  a8:	90 e0       	ldi	r25, 0x00	; 0
	unsigned char fuel = 0x00;
	
	while (1)
	{
		fuel = PINA & 0x70;
  aa:	80 b1       	in	r24, 0x00	; 0
		if(GetBit(fuel, 4) && GetBit(fuel, 5) && !GetBit(fuel, 6))
  ac:	28 2f       	mov	r18, r24
  ae:	20 73       	andi	r18, 0x30	; 48
  b0:	20 33       	cpi	r18, 0x30	; 48
  b2:	21 f4       	brne	.+8      	; 0xbc <main+0x1e>
  b4:	86 fd       	sbrc	r24, 6
  b6:	02 c0       	rjmp	.+4      	; 0xbc <main+0x1e>
#include <avr/io.h>

//bit-access function
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b)
{
	return (b? x | (0x01 << k) : x & ~(0x01 << k));
  b8:	90 68       	ori	r25, 0x80	; 128
	while (1)
	{
		fuel = PINA & 0x70;
		if(GetBit(fuel, 4) && GetBit(fuel, 5) && !GetBit(fuel, 6))
		{
			tmpC = SetBit(tmpC, 7, 1);
  ba:	01 c0       	rjmp	.+2      	; 0xbe <main+0x20>
#include <avr/io.h>

//bit-access function
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b)
{
	return (b? x | (0x01 << k) : x & ~(0x01 << k));
  bc:	9f 77       	andi	r25, 0x7F	; 127
		else
		{
			tmpC = SetBit(tmpC, 7, 0);
		}
		
		fuel = PINA & 0x0F;
  be:	80 b1       	in	r24, 0x00	; 0
  c0:	8f 70       	andi	r24, 0x0F	; 15
		
		if(fuel == 0x00)
  c2:	49 f1       	breq	.+82     	; 0x116 <main+0x78>
		{
			tmpC = 0x40;
		}
		else if(fuel == 0x01 || fuel == 0x02)
  c4:	2f ef       	ldi	r18, 0xFF	; 255
  c6:	28 0f       	add	r18, r24
  c8:	22 30       	cpi	r18, 0x02	; 2
  ca:	18 f4       	brcc	.+6      	; 0xd2 <main+0x34>
		{
			tmpC = (tmpC & 0x80) | 0x60;
  cc:	90 78       	andi	r25, 0x80	; 128
  ce:	90 66       	ori	r25, 0x60	; 96
  d0:	23 c0       	rjmp	.+70     	; 0x118 <main+0x7a>
		}
		else if(fuel == 0x03 || fuel == 0x04)
  d2:	2d ef       	ldi	r18, 0xFD	; 253
  d4:	28 0f       	add	r18, r24
  d6:	22 30       	cpi	r18, 0x02	; 2
  d8:	18 f4       	brcc	.+6      	; 0xe0 <main+0x42>
		{
			tmpC = (tmpC & 0x80) | 0x70;
  da:	90 78       	andi	r25, 0x80	; 128
  dc:	90 67       	ori	r25, 0x70	; 112
  de:	1c c0       	rjmp	.+56     	; 0x118 <main+0x7a>
		}
		else if(fuel == 0x05 || fuel == 0x06)
  e0:	2b ef       	ldi	r18, 0xFB	; 251
  e2:	28 0f       	add	r18, r24
  e4:	22 30       	cpi	r18, 0x02	; 2
  e6:	18 f4       	brcc	.+6      	; 0xee <main+0x50>
		{
			tmpC = (tmpC & 0x80) | 0x38;
  e8:	90 78       	andi	r25, 0x80	; 128
  ea:	98 63       	ori	r25, 0x38	; 56
  ec:	15 c0       	rjmp	.+42     	; 0x118 <main+0x7a>
		}
		else if(fuel == 0x07 || fuel == 0x08 || fuel == 0x09)
  ee:	29 ef       	ldi	r18, 0xF9	; 249
  f0:	28 0f       	add	r18, r24
  f2:	23 30       	cpi	r18, 0x03	; 3
  f4:	18 f4       	brcc	.+6      	; 0xfc <main+0x5e>
		{
			tmpC = (tmpC & 0x80) | 0x3C;
  f6:	90 78       	andi	r25, 0x80	; 128
  f8:	9c 63       	ori	r25, 0x3C	; 60
  fa:	0e c0       	rjmp	.+28     	; 0x118 <main+0x7a>
		}
		else if(fuel == 0x0A || fuel == 0x0B || fuel == 0x0C)
  fc:	26 ef       	ldi	r18, 0xF6	; 246
  fe:	28 0f       	add	r18, r24
 100:	23 30       	cpi	r18, 0x03	; 3
 102:	18 f4       	brcc	.+6      	; 0x10a <main+0x6c>
		{
			tmpC = (tmpC & 0x80) | 0x3E;
 104:	90 78       	andi	r25, 0x80	; 128
 106:	9e 63       	ori	r25, 0x3E	; 62
 108:	07 c0       	rjmp	.+14     	; 0x118 <main+0x7a>
		}
		else if(fuel == 0x0D || fuel == 0x0E || fuel == 0x0F)
 10a:	8d 50       	subi	r24, 0x0D	; 13
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	20 f4       	brcc	.+8      	; 0x118 <main+0x7a>
		{
			tmpC = (tmpC & 0x80) | 0x3F;
 110:	90 78       	andi	r25, 0x80	; 128
 112:	9f 63       	ori	r25, 0x3F	; 63
 114:	01 c0       	rjmp	.+2      	; 0x118 <main+0x7a>
		
		fuel = PINA & 0x0F;
		
		if(fuel == 0x00)
		{
			tmpC = 0x40;
 116:	90 e4       	ldi	r25, 0x40	; 64
		}
		else if(fuel == 0x0D || fuel == 0x0E || fuel == 0x0F)
		{
			tmpC = (tmpC & 0x80) | 0x3F;
		}
		PORTC = tmpC;
 118:	98 b9       	out	0x08, r25	; 8
	}
 11a:	c7 cf       	rjmp	.-114    	; 0xaa <main+0xc>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
